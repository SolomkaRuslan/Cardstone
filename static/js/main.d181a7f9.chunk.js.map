{"version":3,"sources":["Data/HearstoneData.js","Data/ClassSelectionData.js","Components/ClassComponent.js","Components/ClassSelector.js","Components/FilterButton.js","Components/CardsCollectionStatusBar.js","Components/CardDeckProvider.js","Components/DeckIsFull.js","Components/Card.js","Components/BasicDivider.js","Components/CardsCollection.js","Components/ManaRadioGroup.js","Components/DropDownFilter.js","Components/CardFilterPanel.js","Components/CardRow.js","Components/CardDeckModal.js","Components/CardDeck.js","Components/DeckBuilder.js","Components/Footer.js","Components/App.js","index.js"],"names":["HearthstoneClass","HearthstoneDispayClass","HearthstoneFilteredData","rarityId","cardTypeId","cardSetId","minionTypeId","spellSchoolId","classId","DisplayNames","manaCost","HearthstoneType","HearthstoneRarity","HearthstoneMinionType","HearthstoneSpellSchool","HearthstoneStandartCardSet","hearstoneClasses","id","title","baseImg","hoverImg","ClassComponent","handleClick","className","style","background","onClick","ClassSelector","styles","selectClass","useState","clicked","setClicked","emptyF","div","map","hsClass","FilterButton","keyName","value","changeFilter","key","CardsCollectionStatusBar","filter","cardsCount","clearFilter","btnClasses","Object","keys","length","CardDeckContext","React","createContext","SetCardDeckContext","DeckInfoContext","CardDeckProvider","children","count","deckInfo","setDeckInfo","deck","setDeck","stateRef","useRef","addCard","useCallback","card","current","undefined","oldInfo","oldDeck","newDeck","index","cost","i","getInsertIndex","splice","Provider","removeCard","newInfo","c","clearDeck","DeckIsFull","hideModal","text","useEffect","setTimeout","areEqual","prevProps","nextProps","Card","openModal","modalMessage","setModalMessage","useContext","onMouseMove","e","el","target","closest","height","clientHeight","width","clientWidth","xVal","clientX","getBoundingClientRect","x","string","clientY","y","transform","handleMove","onMouseOut","handleOut","src","image","alt","name","mes","memo","BasicDivider","customStyles","content","maxWidth","top","left","backgroundColor","color","zIndex","border","overlay","Modal","setAppElement","CardsCollection","cards","modalIsOpen","setModalIsOpen","modalCardRef","multiClassIds","handleShowModal","isOpen","onRequestClose","contentLabel","flavorText","dangerouslySetInnerHTML","__html","artistName","ManaRadioGroup","handleChange","selected","manaCount","arr","classes","push","DropDownFilter","options","property","open","setOpen","onOutsideClick","optionKey","option","CardFilterPanel","toggleClassCards","playerClassId","showExpanded","setShowExpanded","show","CardRow","quantity","countNumber","backgroundImage","cropImage","CardDeckModal","api","BlizzAPI","require","region","clientId","clientSecret","CardDeck","showModal","setshowModal","copyDeckCode","a","deckIds","forEach","query","deckCode","navigator","clipboard","writeText","replace","DeckBuilder","setFilter","changes","newFilter","good","includes","filterCards","Footer","href","App","setPlayerClassId","classSelection","setClassSelection","setCards","AnimatedClassSelector","animated","transition","useTransition","from","opacity","enter","leave","config","duration","state","getCards","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d181a7f9.chunk.js","sourcesContent":["export const HearthstoneClass = {\r\n  2: \"druid\",\r\n  3: \"hunter\",\r\n  4: \"mage\",\r\n  5: \"paladin\",\r\n  6: \"priest\",\r\n  7: \"rogue\",\r\n  8: \"shaman\",\r\n  9: \"warlock\",\r\n  10: \"warrior\",\r\n  12: \"neutral\",\r\n  14: \"demonhunter\",\r\n};\r\n\r\nexport const HearthstoneDispayClass = {\r\n  2: \"Druid\",\r\n  3: \"Hunter\",\r\n  4: \"Mage\",\r\n  5: \"Paladin\",\r\n  6: \"Priest\",\r\n  7: \"Rogue\",\r\n  8: \"Shaman\",\r\n  9: \"Warlock\",\r\n  10: \"Warrior\",\r\n  12: \"Neutral\",\r\n  14: \"Demon Hunter\",\r\n};\r\n\r\nexport const HearthstoneFilteredData = {\r\n  rarityId: {\r\n    0: \"Any Rarity\",\r\n    1: \"Common\",\r\n    3: \"Rare\",\r\n    4: \"Epic\",\r\n    5: \"Legendary\",\r\n  },\r\n  cardTypeId: {\r\n    0: \"Any Type\",\r\n    4: \"Minion\",\r\n    5: \"Spell\",\r\n    7: \"Weapon\",\r\n  },\r\n  cardSetId: {\r\n    0: \"Any Card Set\",\r\n    1637: \"Core\",\r\n    1578: \"United in Stormwind\",\r\n    1525: \"Forged in the Barrens\",\r\n    1466: \"Madness at the Darkmoon Faire\",\r\n    1443: \"Scholomance Academy\",\r\n    1414: \"Ashes of Outland\",\r\n  },\r\n  minionTypeId: {\r\n    0: \"Any Minion Type\",\r\n    14: \"Murloc\",\r\n    15: \"Demon\",\r\n    17: \"Mech\",\r\n    18: \"Elemental\",\r\n    20: \"Beast\",\r\n    21: \"Totem\",\r\n    23: \"Pirate\",\r\n    24: \"Dragon\",\r\n    26: \"All\",\r\n    43: \"Quilboar\",\r\n  },\r\n  spellSchoolId: {\r\n    0: \"Any Spell School\",\r\n    1: \"Arcane\",\r\n    2: \"Fire\",\r\n    3: \"Frost\",\r\n    4: \"Nature\",\r\n    5: \"Holy\",\r\n    6: \"Shadow\",\r\n    7: \"Fel\",\r\n  },\r\n  classId: {\r\n    2: \"druid\",\r\n    3: \"hunter\",\r\n    4: \"mage\",\r\n    5: \"paladin\",\r\n    6: \"priest\",\r\n    7: \"rogue\",\r\n    8: \"shaman\",\r\n    9: \"warlock\",\r\n    10: \"warrior\",\r\n    12: \"neutral\",\r\n    14: \"demonhunter\",\r\n  },\r\n};\r\n\r\nexport const DisplayNames = {\r\n  classId: \"Class\",\r\n  rarityId: \"Rarity\",\r\n  cardTypeId: \"Type\",\r\n  cardSetId: \"Card Set\",\r\n  manaCost: \"Mana\",\r\n  minionTypeId: \"Minion Type\",\r\n  spellSchoolId: \"Spell School\",\r\n};\r\n\r\nexport const HearthstoneType = {\r\n  0: \"Any Types\",\r\n  4: \"Minion\",\r\n  5: \"Spell\",\r\n  7: \"Weapon\",\r\n};\r\n\r\nexport const HearthstoneRarity = {\r\n  0: \"All Raritys\",\r\n  1: \"Common\",\r\n  3: \"Rare\",\r\n  4: \"Epic\",\r\n  5: \"Legendary\",\r\n};\r\n\r\nexport const HearthstoneGameMode = {\r\n  1: \"Standard & Wild Formats\",\r\n  2: \"Battlegrounds\",\r\n  3: \"Current Arena Cards\",\r\n  4: \"Current Duels Cards\",\r\n  5: \"Standard\",\r\n};\r\n\r\nexport const HearthstoneMinionType = {\r\n  0: \"All Minion Types\",\r\n  14: \"Murloc\",\r\n  15: \"Demon\",\r\n  17: \"Mech\",\r\n  18: \"Elemental\",\r\n  20: \"Beast\",\r\n  21: \"Totem\",\r\n  23: \"Pirate\",\r\n  24: \"Dragon\",\r\n  26: \"All\",\r\n  43: \"Quilboar\",\r\n};\r\n\r\nexport const HearthstoneSpellSchool = {\r\n  0: \"All Spell Schools\",\r\n  1: \"Arcane\",\r\n  2: \"Fire\",\r\n  3: \"Frost\",\r\n  4: \"Nature\",\r\n  5: \"Holy\",\r\n  6: \"Shadow\",\r\n  7: \"Fel\",\r\n};\r\n\r\nexport const HearthstoneFilterableFields = [\r\n  \"collectible\",\r\n  \"cardSetId\",\r\n  \"minionTypeId\",\r\n  \"spellSchoolId\",\r\n  \"rarityId\",\r\n  \"cardTypeId\",\r\n  \"manaCost\",\r\n  \"attack\",\r\n  \"health\",\r\n  \"armor\",\r\n];\r\n\r\nexport const HearthstoneNumericFields = [\r\n  \"manaCost\",\r\n  \"attack\",\r\n  \"health\",\r\n  \"armor\",\r\n];\r\n\r\n// \"name\": \"Standard Cards\"\r\nexport const HearthstoneStandartCardSet = {\r\n  0: \"All Card Sets\",\r\n  1637: \"Core\",\r\n  1578: \"United in Stormwind\",\r\n  1525: \"Forged in the Barrens\",\r\n  1466: \"Madness at the Darkmoon Faire\",\r\n  1443: \"Scholomance Academy\",\r\n  1414: \"Ashes of Outland\",\r\n};\r\n\r\n// \"name\": \"Wild Cards\"\r\nexport const HearthstoneWildCardSet = [\r\n  \"legacy\",\r\n  \"united-in-stormwind\",\r\n  \"forged-in-the-barrens\",\r\n  \"core\",\r\n  \"madness-at-the-darkmoon-faire\",\r\n  \"scholomance-academy\",\r\n  \"demonhunter-initiate\",\r\n  \"ashes-of-outland\",\r\n  \"galakronds-awakening\",\r\n  \"descent-of-dragons\",\r\n  \"saviors-of-uldum\",\r\n  \"rise-of-shadows\",\r\n  \"rastakhans-rumble\",\r\n  \"the-boomsday-project\",\r\n  \"the-witchwood\",\r\n  \"kobolds-and-catacombs\",\r\n  \"knights-of-the-frozen-throne\",\r\n  \"journey-to-ungoro\",\r\n  \"mean-streets-of-gadgetzan\",\r\n  \"one-night-in-karazhan\",\r\n  \"whispers-of-the-old-gods\",\r\n  \"league-of-explorers\",\r\n  \"the-grand-tournament\",\r\n  \"blackrock-mountain\",\r\n  \"goblins-vs-gnomes\",\r\n  \"naxxramas\",\r\n];\r\n\r\nexport const HearthstoneKeyWords = [\r\n  {\r\n    id: 1,\r\n    slug: \"taunt\",\r\n    name: \"Taunt\",\r\n    refText: \"Enemies must attack minions that have Taunt.\",\r\n    text: \"Enemies must attack this minion.\",\r\n    gameModes: [1, 2, 4, 5],\r\n  },\r\n  {\r\n    id: 2,\r\n    slug: \"spellpower\",\r\n    name: \"Spell Damage\",\r\n    refText: \"Your spells deal extra damage.\",\r\n    text: \"Your spell cards deal extra damage.\",\r\n    gameModes: [1, 4, 5],\r\n  },\r\n  {\r\n    id: 3,\r\n    slug: \"divine-shield\",\r\n    name: \"Divine Shield\",\r\n    refText: \"The first time a Shielded minion takes damage, ignore it.\",\r\n    text: \"The first time this minion takes damage, ignore it.\",\r\n    gameModes: [1, 2, 4, 5],\r\n  },\r\n  {\r\n    id: 4,\r\n    slug: \"charge\",\r\n    name: \"Charge\",\r\n    refText: \"Can attack immediately.\",\r\n    text: \"Can attack immediately.\",\r\n    gameModes: [1, 2, 4, 5],\r\n  },\r\n  {\r\n    id: 5,\r\n    slug: \"secret\",\r\n    name: \"Secret\",\r\n    refText: \"Hidden until a specific action occurs on your opponent's turn.\",\r\n    text: \"Hidden until a specific action occurs on your opponent's turn.\",\r\n    gameModes: [1, 4, 5],\r\n  },\r\n  {\r\n    id: 6,\r\n    slug: \"stealth\",\r\n    name: \"Stealth\",\r\n    refText: \"Can't be attacked or targeted until it attacks.\",\r\n    text: \"Can't be attacked or targeted until it attacks.\",\r\n    gameModes: [1, 4, 5],\r\n  },\r\n  {\r\n    id: 8,\r\n    slug: \"battlecry\",\r\n    name: \"Battlecry\",\r\n    refText: \"Does something when you play it from your hand.\",\r\n    text: \"Does something when you play it from your hand.\",\r\n    gameModes: [1, 2, 4, 5],\r\n  },\r\n  {\r\n    id: 10,\r\n    slug: \"freeze\",\r\n    name: \"Freeze\",\r\n    refText: \"Frozen characters lose their next attack.\",\r\n    text: \"Frozen characters lose their next attack.\",\r\n    gameModes: [1, 2, 4, 5],\r\n  },\r\n  {\r\n    id: 11,\r\n    slug: \"windfury\",\r\n    name: \"Windfury\",\r\n    refText: \"Can attack twice each turn.\",\r\n    text: \"Can attack twice each turn.\",\r\n    gameModes: [1, 2, 4, 5],\r\n  },\r\n  {\r\n    id: 12,\r\n    slug: \"deathrattle\",\r\n    name: \"Deathrattle\",\r\n    refText: \"Does something when it dies.\",\r\n    text: \"Does something when it dies.\",\r\n    gameModes: [1, 2, 4, 5],\r\n  },\r\n  {\r\n    id: 13,\r\n    slug: \"combo\",\r\n    name: \"Combo\",\r\n    refText: \"A bonus if you already played a card this turn.\",\r\n    text: \"A bonus if you already played a card this turn.\",\r\n    gameModes: [1, 4, 5],\r\n  },\r\n  {\r\n    id: 14,\r\n    slug: \"overload\",\r\n    name: \"Overload\",\r\n    refText: \"Cards with Overload limit your mana next turn.\",\r\n    text: \"You have X less mana next turn.\",\r\n    gameModes: [1, 4, 5],\r\n  },\r\n  {\r\n    id: 15,\r\n    slug: \"silence\",\r\n    name: \"Silence\",\r\n    refText: \"Removes all card text and enchantments.\",\r\n    text: \"Removes all card text and enchantments.\",\r\n    gameModes: [1, 4, 5],\r\n  },\r\n  {\r\n    id: 16,\r\n    slug: \"counter\",\r\n    name: \"Counter\",\r\n    refText: \"A card that is Countered has no effect.\",\r\n    text: \"A card that is Countered has no effect.\",\r\n    gameModes: [1, 4, 5],\r\n  },\r\n  {\r\n    id: 17,\r\n    slug: \"immune\",\r\n    name: \"Immune\",\r\n    refText: \"Immune characters can't be damaged.\",\r\n    text: \"Can't be damaged.\",\r\n    gameModes: [1, 2, 4, 5],\r\n  },\r\n  {\r\n    id: 19,\r\n    slug: \"spare-part\",\r\n    name: \"Spare Parts\",\r\n    refText: \"Spare Parts are 1-Cost spells with minor effects.\",\r\n    text: \"Spare Parts are 1-Cost spells with minor effects.\",\r\n    gameModes: [1],\r\n  },\r\n  {\r\n    id: 20,\r\n    slug: \"inspire\",\r\n    name: \"Inspire\",\r\n    refText: \"Does something after you use your Hero Power.\",\r\n    text: \"Does something after you use your Hero Power.\",\r\n    gameModes: [1],\r\n  },\r\n  {\r\n    id: 21,\r\n    slug: \"discover\",\r\n    name: \"Discover\",\r\n    refText: \"Choose one of three cards to add to your hand.\",\r\n    text: \"Choose one of three cards to add to your hand.\",\r\n    gameModes: [1, 2, 4, 5],\r\n  },\r\n  {\r\n    id: 31,\r\n    slug: \"quest\",\r\n    name: \"Quest\",\r\n    refText: \"Starts in your hand. Complete for a reward.\",\r\n    text: \"Starts in your hand. Complete for a reward.\",\r\n    gameModes: [1, 4, 5],\r\n  },\r\n  {\r\n    id: 32,\r\n    slug: \"poisonous\",\r\n    name: \"Poisonous\",\r\n    refText: \"Destroy any minion damaged by this.\",\r\n    text: \"Destroy any minion damaged by this.\",\r\n    gameModes: [1, 2, 4, 5],\r\n  },\r\n  {\r\n    id: 34,\r\n    slug: \"adapt\",\r\n    name: \"Adapt\",\r\n    refText: \"Choose one of 3 bonuses.\",\r\n    text: \"Choose one of 3 bonuses.\",\r\n    gameModes: [1, 2, 4],\r\n  },\r\n  {\r\n    id: 38,\r\n    slug: \"lifesteal\",\r\n    name: \"Lifesteal\",\r\n    refText: \"Damage dealt also heals your hero.\",\r\n    text: \"Damage dealt also heals your hero.\",\r\n    gameModes: [1, 4, 5],\r\n  },\r\n  {\r\n    id: 39,\r\n    slug: \"recruit\",\r\n    name: \"Recruit\",\r\n    refText: \"Summon a minion from your deck.\",\r\n    text: \"Summon a minion from your deck.\",\r\n    gameModes: [1, 4],\r\n  },\r\n  {\r\n    id: 52,\r\n    slug: \"echo\",\r\n    name: \"Echo\",\r\n    refText:\r\n      \"Repeatable the turn you play this. Copies can't cost less than (1).\",\r\n    text: \"Repeatable the turn you play this. Copies can't cost less than (1).\",\r\n    gameModes: [1, 4],\r\n  },\r\n  {\r\n    id: 53,\r\n    slug: \"rush\",\r\n    name: \"Rush\",\r\n    refText: \"Can attack minions immediately.\",\r\n    text: \"Can attack minions immediately.\",\r\n    gameModes: [1, 4, 5],\r\n  },\r\n  {\r\n    id: 61,\r\n    slug: \"overkill\",\r\n    name: \"Overkill\",\r\n    refText: \"Deal excess damage on your turn for a bonus.\",\r\n    text: \"Deal excess damage on your turn for a bonus.\",\r\n    gameModes: [1],\r\n  },\r\n  {\r\n    id: 64,\r\n    slug: \"startofgamekeyword\",\r\n    name: \"Start of Game\",\r\n    refText: \"Does something before the first turn.\",\r\n    text: \"Does something before the first turn.\",\r\n    gameModes: [1, 4, 5],\r\n  },\r\n  {\r\n    id: 66,\r\n    slug: \"modular\",\r\n    name: \"Magnetic\",\r\n    refText: \"Play this to the left of a Mech to fuse them together!\",\r\n    text: \"Play this to the left of a Mech to fuse them together!\",\r\n    gameModes: [1, 2],\r\n  },\r\n  {\r\n    id: 71,\r\n    slug: \"evilzug\",\r\n    name: \"Lackey\",\r\n    refText: \"Lackeys are 1-Cost minions with Battlecries.\",\r\n    text: \"Lackeys are 1-Cost minions with Battlecries.\",\r\n    gameModes: [1],\r\n  },\r\n  {\r\n    id: 76,\r\n    slug: \"twinspell\",\r\n    name: \"Twinspell\",\r\n    refText: \"Can be cast twice.\",\r\n    text: \"Can be cast twice.\",\r\n    gameModes: [1, 4],\r\n  },\r\n  {\r\n    id: 77,\r\n    slug: \"mega-windfury\",\r\n    name: \"Mega-Windfury\",\r\n    refText: \"Can attack four times each turn.\",\r\n    text: \"Can attack four times each turn.\",\r\n    gameModes: [1],\r\n  },\r\n  {\r\n    id: 78,\r\n    slug: \"reborn\",\r\n    name: \"Reborn\",\r\n    refText: \"Resurrects with 1 Health the first time it dies.\",\r\n    text: \"Resurrects with 1 Health the first time it dies.\",\r\n    gameModes: [1, 2, 4],\r\n  },\r\n  {\r\n    id: 79,\r\n    slug: \"empower\",\r\n    name: \"Invoke\",\r\n    refText: \"Use Galakrond's Power.\",\r\n    text: \"Use Galakrond's Power.\",\r\n    gameModes: [1],\r\n  },\r\n  {\r\n    id: 86,\r\n    slug: \"outcast\",\r\n    name: \"Outcast\",\r\n    refText: \"A bonus if played as the left- or right-most card in hand.\",\r\n    text: \"A bonus if played as the left- or right-most card in hand.\",\r\n    gameModes: [1, 4, 5],\r\n  },\r\n  {\r\n    id: 88,\r\n    slug: \"spellburst\",\r\n    name: \"Spellburst\",\r\n    refText: \"A one-time effect after you cast a spell.\",\r\n    text: \"A one-time effect after you cast a spell.\",\r\n    gameModes: [1, 4, 5],\r\n  },\r\n  {\r\n    id: 89,\r\n    slug: \"sidequest\",\r\n    name: \"Sidequest\",\r\n    refText: \"Complete for a reward.\",\r\n    text: \"Complete for a reward.\",\r\n    gameModes: [1],\r\n  },\r\n  {\r\n    id: 91,\r\n    slug: \"corrupt\",\r\n    name: \"Corrupt\",\r\n    refText: \"Upgrades in hand after you play a card that costs more.\",\r\n    text: \"Upgrades in hand after you play a card that costs more.\",\r\n    gameModes: [1, 4, 5],\r\n  },\r\n  {\r\n    id: 92,\r\n    slug: \"start-of-combat\",\r\n    name: \"Start of Combat\",\r\n    refText: \"Does something at the start of the Combat Phase.\",\r\n    text: \"Does something at the start of the Combat Phase.\",\r\n    gameModes: [2],\r\n  },\r\n  {\r\n    id: 96,\r\n    slug: \"questline\",\r\n    name: \"Questline\",\r\n    refText: \"Starts in your hand. Complete for a reward, up to 3 times!\",\r\n    text: \"Starts in your hand. Complete for a reward, up to 3 times!\",\r\n    gameModes: [1, 4, 5],\r\n  },\r\n  {\r\n    id: 97,\r\n    slug: \"trade\",\r\n    name: \"Tradeable\",\r\n    refText: \"Drag this into your deck to spend 1 Mana and draw a new card.\",\r\n    text: \"Drag this into your deck to spend 1 Mana and draw a new card.\",\r\n    gameModes: [1, 4, 5],\r\n  },\r\n  {\r\n    id: 99,\r\n    slug: \"frenzy\",\r\n    name: \"Frenzy\",\r\n    refText: \"A one-time effect after this survives damage.\",\r\n    text: \"A one-time effect after this survives damage.\",\r\n    gameModes: [1, 2, 4, 5],\r\n  },\r\n  {\r\n    id: 104,\r\n    slug: \"spellpowernature\",\r\n    name: \"Nature Spell Damage\",\r\n    refText: \"Your Nature spells deal extra damage.\",\r\n    text: \"Your Nature spell cards deal extra damage.\",\r\n    gameModes: [1, 4, 5],\r\n  },\r\n  {\r\n    id: 109,\r\n    slug: \"blood-gem\",\r\n    name: \"Blood Gem\",\r\n    refText: \"A spell that gives a friendly minion +1/+1.\",\r\n    text: \"A spell that gives a friendly minion +1/+1.\",\r\n    gameModes: [2],\r\n  },\r\n  {\r\n    id: 198,\r\n    slug: \"avenge\",\r\n    name: \"Avenge (X)\",\r\n    refText: \"Does something after X friendly minions die.\",\r\n    text: \"Does something after X friendly minions die.\",\r\n    gameModes: [2],\r\n  },\r\n];\r\n","const hearstoneClasses = [\r\n  {\r\n    id: 10,\r\n    title: \"Warrior\",\r\n    baseImg:\r\n      \"https://images.blz-contentstack.com/v3/assets/bltc965041283bac56c/bltcedb8b995553ac63/5e271e5ed9ccad3d47b2eedb/heroes_classSelect_warrior_static.png\",\r\n    hoverImg:\r\n      \"https://images.blz-contentstack.com/v3/assets/bltc965041283bac56c/bltbe6ac8d5e898b1a3/5e271e5e7c805841bb5f80c5/heroes_classSelect_warrior_hover.png\",\r\n  },\r\n  {\r\n    id: 14,\r\n    title: \"Demon Hunter\",\r\n    baseImg:\r\n      \"https://images.blz-contentstack.com/v3/assets/bltc965041283bac56c/bltfbee9c938d414fe3/5e5fec1a8902221b5e1dd5f0/heroes_classSelect_DH_static.png\",\r\n    hoverImg:\r\n      \"https://images.blz-contentstack.com/v3/assets/bltc965041283bac56c/bltbc7f0c14bbd98d13/5e6000c66427121bd6298271/heroes_classSelect_DH_hover.png\",\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Druid\",\r\n    baseImg:\r\n      \"https://images.blz-contentstack.com/v3/assets/bltc965041283bac56c/blt8a140efea23544de/5e271e31486f10424527ac40/heroes_classSelect_druid_static.png\",\r\n    hoverImg:\r\n      \"https://images.blz-contentstack.com/v3/assets/bltc965041283bac56c/bltce0b2647154c4b4e/5e271e317be0e73d40675e24/heroes_classSelect_druid_hover.png\",\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Hunter\",\r\n    baseImg:\r\n      \"https://images.blz-contentstack.com/v3/assets/bltc965041283bac56c/blte403920cfbb5d2a7/5e271e4f561a623cdc51fda4/heroes_classSelect_hunter_static.png\",\r\n    hoverImg:\r\n      \"https://images.blz-contentstack.com/v3/assets/bltc965041283bac56c/blt52e4af1e33a04b38/5e271e4f486f10424527ac46/heroes_classSelect_hunter_hover.png\",\r\n  },\r\n  {\r\n    id: 5,\r\n    title: \"Paladin\",\r\n    baseImg:\r\n      \"https://images.blz-contentstack.com/v3/assets/bltc965041283bac56c/blt2ed840dc349b2795/5e271e7bb8a6493cb7bd4444/heroes_classSelect_paladin_static.png\",\r\n    hoverImg:\r\n      \"https://images.blz-contentstack.com/v3/assets/bltc965041283bac56c/bltde746dfa45320f53/5e271e7b7c805841bb5f80cb/heroes_classSelect_paladin_hover.png\",\r\n  },\r\n  {\r\n    id: 6,\r\n    title: \"Priest\",\r\n    baseImg:\r\n      \"https://images.blz-contentstack.com/v3/assets/bltc965041283bac56c/blt2799a75da217871b/5e271e23486f10424527ac3a/heroes_classSelect_priest_static.png\",\r\n    hoverImg:\r\n      \"https://images.blz-contentstack.com/v3/assets/bltc965041283bac56c/blta9d7d8a05365e477/5e271e23a9cce63cb6048af7/heroes_classSelect_priest_hover.png\",\r\n  },\r\n  {\r\n    id: 7,\r\n    title: \"Rogue\",\r\n    baseImg:\r\n      \"https://images.blz-contentstack.com/v3/assets/bltc965041283bac56c/blt2b7abdc61cac09d6/5e271e6e991f1e3c5188ba88/heroes_classSelect_rogue_static.png\",\r\n    hoverImg:\r\n      \"https://images.blz-contentstack.com/v3/assets/bltc965041283bac56c/bltbcded2b184c91328/5e271e6ea9cce63cb6048b03/heroes_classSelect_rogue_hover.png\",\r\n  },\r\n  {\r\n    id: 8,\r\n    title: \"Shaman\",\r\n    baseImg:\r\n      \"https://images.blz-contentstack.com/v3/assets/bltc965041283bac56c/blt4d6e7aff24e73106/5e20a231a9cce63cb6048882/heroes_shaman_tile_static.png\",\r\n    hoverImg:\r\n      \"https://images.blz-contentstack.com/v3/assets/bltc965041283bac56c/blt5b86ed089f5445dd/5e20a24871e37241baaaba09/heroes_shaman_tile_hover.png\",\r\n  },\r\n  {\r\n    id: 9,\r\n    title: \"Warlock\",\r\n    baseImg:\r\n      \"https://images.blz-contentstack.com/v3/assets/bltc965041283bac56c/blt754fac05dfaf5940/5e271e41a9cce63cb6048afd/heroes_classSelect_warlock_static.png\",\r\n    hoverImg:\r\n      \"https://images.blz-contentstack.com/v3/assets/bltc965041283bac56c/bltb4cc0e879fcedb8a/5e271e417be0e73d40675e2a/heroes_classSelect_warlock_hover.png\",\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Mage\",\r\n    baseImg:\r\n      \"https://images.blz-contentstack.com/v3/assets/bltc965041283bac56c/bltbec35c965683fae2/5e4f111a8d83401be1195ee8/heroes_classSelect_mage_static.png\",\r\n    hoverImg:\r\n      \"https://images.blz-contentstack.com/v3/assets/bltc965041283bac56c/blt0fc0d0fef8c4b0ee/5e4f110ba9f0fb732c24c41d/heroes_classSelect_mage_hover.png\",\r\n  },\r\n];\r\n\r\nexport default hearstoneClasses;\r\n","const ClassComponent = ({ baseImg, hoverImg, title, id, handleClick }) => {\r\n  return (\r\n    <div\r\n      className=\"class\"\r\n      style={{\r\n        background: `url(${baseImg}) center center / contain no-repeat`,\r\n      }}\r\n      onClick={() => handleClick(id)}\r\n    >\r\n      <div\r\n        className=\"class-holder\"\r\n        style={{\r\n          background: `url(${hoverImg}) center center / contain no-repeat`,\r\n        }}\r\n      >\r\n        <h5>{title}</h5>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClassComponent;\r\n","import { animated } from \"@react-spring/web\";\r\nimport { useState } from \"react\";\r\nimport hearstoneClasses from \"../Data/ClassSelectionData\";\r\nimport ClassComponent from \"./ClassComponent\";\r\n\r\nconst ClassSelector = ({ styles, selectClass }) => {\r\n  const [clicked, setClicked] = useState(false);\r\n\r\n  const handleClick = (id) => {\r\n    setClicked(true);\r\n    selectClass(id);\r\n  };\r\n\r\n  const emptyF = () => void 0;\r\n\r\n  return (\r\n    <animated.div style={styles} className=\"class-selector\">\r\n      <h1>Select Your Class</h1>\r\n      <div className=\"class-collection\">\r\n        {hearstoneClasses.map((hsClass) => (\r\n          <ClassComponent\r\n            baseImg={hsClass.baseImg}\r\n            hoverImg={hsClass.hoverImg}\r\n            title={hsClass.title}\r\n            key={hsClass.id}\r\n            id={+hsClass.id}\r\n            handleClick={!clicked ? handleClick : emptyF}\r\n          />\r\n        ))}\r\n      </div>\r\n    </animated.div>\r\n  );\r\n};\r\n\r\nexport default ClassSelector;\r\n","import { HearthstoneFilteredData, DisplayNames } from \"../Data/HearstoneData\";\r\n\r\nconst FilterButton = ({ keyName, value, changeFilter }) => {\r\n  return (\r\n    <button\r\n      className=\"filter-btn\"\r\n      onClick={() => changeFilter({ key: keyName, value })}\r\n    >\r\n      {DisplayNames[keyName]}:{\" \"}\r\n      {keyName === \"manaCost\" ? value : HearthstoneFilteredData[keyName][value]}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default FilterButton;\r\n","import FilterButton from \"./FilterButton\";\r\n\r\nconst CardsCollectionStatusBar = ({\r\n  filter,\r\n  cardsCount,\r\n  changeFilter,\r\n  clearFilter,\r\n}) => {\r\n  const btnClasses =\r\n    Object.keys(filter).length > 1 ? \"filter-btn\" : \"filter-btn hidden\";\r\n\r\n  return (\r\n    <div className=\"status-bar\">\r\n      <div className=\"status-bar-filters\">\r\n        <span>Found {cardsCount} Cards:</span>\r\n        {Object.keys(filter).map((keyName) =>\r\n          keyName !== \"classId\" ? (\r\n            <FilterButton\r\n              keyName={keyName}\r\n              value={filter[keyName]}\r\n              key={keyName}\r\n              changeFilter={changeFilter}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )\r\n        )}\r\n      </div>\r\n      <button className={btnClasses} onClick={() => clearFilter()}>\r\n        Clear Filters\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardsCollectionStatusBar;\r\n","import React, { useState, useCallback, useRef } from \"react\";\r\n\r\nexport const CardDeckContext = React.createContext();\r\nexport const SetCardDeckContext = React.createContext();\r\nexport const DeckInfoContext = React.createContext();\r\n\r\nconst getInsertIndex = (cost, deck) => {\r\n  if (deck.length === 0) return 0;\r\n  let index = 0;\r\n\r\n  for (let i = 0; i < deck.length; i++) {\r\n    if (deck[i].manaCost > cost) break;\r\n    index++;\r\n  }\r\n  return index;\r\n};\r\n\r\nconst CardDeckProvider = ({ children }) => {\r\n  const [deckInfo, setDeckInfo] = useState(() => ({ count: 0 }));\r\n  const [deck, setDeck] = useState([]);\r\n  let stateRef = useRef({ count: 0 });\r\n\r\n  const addCard = useCallback(\r\n    (card) => {\r\n      if (stateRef.current.count > 29)\r\n        return \"Your deck is full: you need to remove a card before you can add another\";\r\n\r\n      switch (stateRef.current[card.id]) {\r\n        case undefined: {\r\n          setDeckInfo((oldInfo) => {\r\n            stateRef.current = {\r\n              ...oldInfo,\r\n              [card.id]: 1,\r\n              count: oldInfo.count + 1,\r\n            };\r\n            return {\r\n              ...oldInfo,\r\n              [card.id]: 1,\r\n              count: oldInfo.count + 1,\r\n            };\r\n          });\r\n\r\n          setDeck((oldDeck) => {\r\n            let newDeck = [...oldDeck];\r\n            const index = getInsertIndex(card.manaCost, oldDeck);\r\n            newDeck.splice(index, 0, card);\r\n            return newDeck;\r\n          });\r\n          break;\r\n        }\r\n        case 1: {\r\n          if (card.rarityId === 5)\r\n            return \"Your can only have one copies of this card in your deck\";\r\n          setDeckInfo((oldInfo) => {\r\n            stateRef.current = {\r\n              ...oldInfo,\r\n              [card.id]: 2,\r\n              count: oldInfo.count + 1,\r\n            };\r\n\r\n            return {\r\n              ...oldInfo,\r\n              [card.id]: 2,\r\n              count: oldInfo.count + 1,\r\n            };\r\n          });\r\n          break;\r\n        }\r\n        default: {\r\n          return \"Your can only have two copies of this card in your deck\";\r\n        }\r\n      }\r\n      return \"\";\r\n    },\r\n    [setDeck, setDeckInfo]\r\n  );\r\n\r\n  const removeCard = (card) => {\r\n    if (stateRef.current.count < 1) return;\r\n    switch (stateRef.current[card.id]) {\r\n      case 2: {\r\n        setDeckInfo((oldInfo) => {\r\n          stateRef.current = {\r\n            ...oldInfo,\r\n            [card.id]: 1,\r\n            count: oldInfo.count - 1,\r\n          };\r\n\r\n          return {\r\n            ...oldInfo,\r\n            [card.id]: 1,\r\n            count: oldInfo.count - 1,\r\n          };\r\n        });\r\n        break;\r\n      }\r\n      case 1: {\r\n        setDeckInfo((oldInfo) => {\r\n          const newInfo = { ...oldInfo, count: oldInfo.count - 1 };\r\n          stateRef.current = { ...oldInfo, count: oldInfo.count - 1 };\r\n\r\n          delete newInfo[card.id];\r\n          delete stateRef.current[card.id];\r\n\r\n          return newInfo;\r\n        });\r\n        setDeck((oldDeck) => oldDeck.filter((c) => c.id !== card.id));\r\n        break;\r\n      }\r\n      default: {\r\n        return;\r\n      }\r\n    }\r\n  };\r\n\r\n  const clearDeck = () => {\r\n    setDeckInfo({ count: 0 });\r\n    setDeck([]);\r\n    stateRef.current = { count: 0 };\r\n  };\r\n\r\n  return (\r\n    <CardDeckContext.Provider\r\n      value={{ deck: deck, removeCard: removeCard, clearDeck: clearDeck }}\r\n    >\r\n      <DeckInfoContext.Provider value={deckInfo}>\r\n        <SetCardDeckContext.Provider value={addCard}>\r\n          {children}\r\n        </SetCardDeckContext.Provider>\r\n      </DeckInfoContext.Provider>\r\n    </CardDeckContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CardDeckProvider;\r\n","import { useEffect } from \"react\";\r\n\r\nconst DeckIsFull = ({ hideModal, text }) => {\r\n  useEffect(() => {\r\n    setTimeout(() => hideModal(\"\"), 1500);\r\n  }, [hideModal]);\r\n\r\n  return (\r\n    <div className=\"deck-is-full\">\r\n      <span>{text}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeckIsFull;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { SetCardDeckContext } from \"./CardDeckProvider\";\r\nimport DeckIsFull from \"./DeckIsFull\";\r\n\r\nconst areEqual = (prevProps, nextProps) => {\r\n  return prevProps.card.id === nextProps.card.id;\r\n};\r\n\r\nconst Card = ({ card, openModal }) => {\r\n  const [modalMessage, setModalMessage] = useState(\"\");\r\n  const addCard = useContext(SetCardDeckContext);\r\n\r\n  const handleMove = (e) => {\r\n    const el = e.target.closest(\".card\");\r\n    const height = el.clientHeight;\r\n    const width = el.clientWidth;\r\n    const xVal = e.clientX - el.getBoundingClientRect().x;\r\n    const yVal = e.clientY - el.getBoundingClientRect().y;\r\n    const yRotation = 20 * ((xVal - width / 2) / width);\r\n    const xRotation = -20 * ((yVal - height / 2) / height);\r\n    const string =\r\n      \"perspective(500px) scale(1.1) rotateX(\" +\r\n      xRotation +\r\n      \"deg) rotateY(\" +\r\n      yRotation +\r\n      \"deg)\";\r\n    el.style.transform = string;\r\n  };\r\n\r\n  const handleOut = (e) => {\r\n    e.target.closest(\".card\").style.transform =\r\n      \"perspective(500px) scale(1) rotateX(0) rotateY(0)\";\r\n  };\r\n\r\n  const handleClick = (card) => {\r\n    const mes = addCard(card);\r\n    if (mes.length === 0 || modalMessage.length !== 0) return;\r\n    setModalMessage(mes);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"card\"\r\n      onMouseMove={(e) => handleMove(e)}\r\n      onMouseOut={(e) => {\r\n        handleOut(e);\r\n      }}\r\n    >\r\n      <img\r\n        src={card.image}\r\n        alt={`${card.name}`}\r\n        onClick={() => handleClick(card)}\r\n      />\r\n      <button className=\"info-btn\" onClick={() => openModal(card)}></button>\r\n      {modalMessage && (\r\n        <DeckIsFull hideModal={setModalMessage} text={modalMessage} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Card, areEqual);\r\n","const BasicDivider = () => {\r\n  return(\r\n    <div className=\"divider\">\r\n      <ul>\r\n        <li className=\"divider-start\"></li>\r\n        <li className=\"divider-middle\"></li>\r\n        <li className=\"divider-end\"></li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BasicDivider;","import React, { useState, useRef } from \"react\";\r\nimport CardsCollectionStatusBar from \"./CardsCollectionStatusBar\";\r\nimport Card from \"./Card\";\r\nimport BasicDivider from \"./BasicDivider\";\r\nimport Modal from \"react-modal\";\r\nimport { HearthstoneFilteredData } from \"../Data/HearstoneData\";\r\nimport { MdClose } from \"react-icons/md\";\r\n\r\nconst customStyles = {\r\n  content: {\r\n    width: \"100%\",\r\n    maxWidth: \"800px\",\r\n    height: \"600px\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    backgroundColor: \"transparent\",\r\n    color: \"white\",\r\n    zIndex: \"7\",\r\n    border: \"none\",\r\n  },\r\n  overlay: {\r\n    backgroundColor: \"rgba(0,0,0,0.9)\",\r\n    zIndex: \"6\",\r\n  },\r\n};\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst CardsCollection = ({ cards, filter, changeFilter, clearFilter }) => {\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n  const modalCardRef = useRef({ multiClassIds: [] });\r\n\r\n  const handleShowModal = (card) => {\r\n    modalCardRef.current = card;\r\n    setModalIsOpen(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-cards-content\">\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        onRequestClose={() => setModalIsOpen(false)}\r\n        style={customStyles}\r\n        contentLabel=\"Example Modal\"\r\n      >\r\n        <div className=\"card-modal\">\r\n          <div className=\"close-modal\" onClick={() => setModalIsOpen(false)}>\r\n            <MdClose />\r\n          </div>\r\n          <img\r\n            src={modalCardRef.current.image}\r\n            alt={`${modalCardRef.current.name}`}\r\n            className=\"modal-img\"\r\n          />\r\n          <div className=\"modal-text\">\r\n            <div className=\"modal-head\">\r\n              <p className=\"modal-name\">{modalCardRef.current.name}</p>\r\n              <p className=\"modal-flavour gray\">\r\n                {modalCardRef.current.flavorText}\r\n              </p>\r\n              <p\r\n                className=\"modal-text-card\"\r\n                dangerouslySetInnerHTML={{ __html: modalCardRef.current.text }}\r\n              ></p>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <ul>\r\n                <li>\r\n                  Class:\r\n                  <span className=\"gb\">\r\n                    {modalCardRef.current.multiClassIds.length > 0\r\n                      ? `${\r\n                          HearthstoneFilteredData.classId[\r\n                            modalCardRef.current.multiClassIds[0]\r\n                          ]\r\n                        }, ${\r\n                          HearthstoneFilteredData.classId[\r\n                            modalCardRef.current.multiClassIds[1]\r\n                          ]\r\n                        }`\r\n                      : HearthstoneFilteredData.classId[\r\n                          modalCardRef.current.classId\r\n                        ]}\r\n                  </span>\r\n                </li>\r\n                <li>\r\n                  Rarity:\r\n                  <span className=\"gb\">\r\n                    {\r\n                      HearthstoneFilteredData.rarityId[\r\n                        modalCardRef.current.rarityId\r\n                      ]\r\n                    }\r\n                  </span>\r\n                </li>\r\n                <li>\r\n                  Type:\r\n                  <span className=\"gb\">\r\n                    {\r\n                      HearthstoneFilteredData.cardTypeId[\r\n                        modalCardRef.current.cardTypeId\r\n                      ]\r\n                    }\r\n                  </span>\r\n                </li>\r\n                {modalCardRef.current.minionTypeId && (\r\n                  <li>\r\n                    Minion type:\r\n                    <span className=\"gb\">\r\n                      {\r\n                        HearthstoneFilteredData.minionTypeId[\r\n                          modalCardRef.current.minionTypeId\r\n                        ]\r\n                      }\r\n                    </span>\r\n                  </li>\r\n                )}\r\n                {modalCardRef.current.spellSchoolId && (\r\n                  <li>\r\n                    Spell school:\r\n                    <span className=\"gb\">\r\n                      {\r\n                        HearthstoneFilteredData.spellSchoolId[\r\n                          modalCardRef.current.spellSchoolId\r\n                        ]\r\n                      }\r\n                    </span>\r\n                  </li>\r\n                )}\r\n\r\n                <li>\r\n                  Set:\r\n                  <span className=\"gb\">\r\n                    {\r\n                      HearthstoneFilteredData.cardSetId[\r\n                        modalCardRef.current.cardSetId\r\n                      ]\r\n                    }\r\n                  </span>\r\n                </li>\r\n                <li>\r\n                  Artist:\r\n                  <span className=\"gb\">{modalCardRef.current.artistName}</span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n\r\n      <CardsCollectionStatusBar\r\n        filter={filter}\r\n        cardsCount={cards.length}\r\n        changeFilter={changeFilter}\r\n        clearFilter={clearFilter}\r\n      />\r\n      <BasicDivider />\r\n      <div className=\"cards-collection\">\r\n        {cards.length > 0\r\n          ? cards.map((card) => (\r\n              <Card card={card} key={card.id} openModal={handleShowModal} />\r\n            ))\r\n          : \"No cards that fit selected filters, try removing some\"}\r\n        <div className=\"ghost-card\"></div>\r\n        <div className=\"ghost-card\"></div>\r\n        <div className=\"ghost-card\"></div>\r\n        <div className=\"ghost-card\"></div>\r\n        <div className=\"ghost-card\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardsCollection;\r\n\r\n// function areEqual(prevProps, nextProps) {\r\n//   let equal = true;\r\n//   for (let i = 0; i < prevProps.length; i++) {\r\n//     console.log(prevProps[i].cardId + \" === \" + nextProps[i].cardId);\r\n\r\n//     if (prevProps[i].cardId !== nextProps[i].cardId) {\r\n//       equal = false;\r\n//       break;\r\n//     }\r\n//   }\r\n//   return equal;\r\n// }\r\n","const ManaRadioGroup = ({ handleChange, selected, manaCount }) => {\r\n  return (\r\n    <div className=\"red-outline\">\r\n      <div className=\"golden-outline\">\r\n        <div className=\"manaBar-container\">\r\n          {(function (count) {\r\n            let arr = [];\r\n            for (let i = 0; i <= count; i++) {\r\n              let classes = selected === i ? \"active mana-btn\" : \"mana-btn\";\r\n              arr.push(\r\n                <button\r\n                  className={classes}\r\n                  onClick={(e) =>\r\n                    handleChange({\r\n                      key: \"manaCost\",\r\n                      value: +e.target.closest(\"button\").value,\r\n                    })\r\n                  }\r\n                  value={i}\r\n                  key={i}\r\n                >\r\n                  <span value={i}>{i}</span>\r\n                </button>\r\n              );\r\n            }\r\n            return arr;\r\n          })(manaCount)}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManaRadioGroup;\r\n","import React, { useState } from \"react\";\r\nimport { FaAngleDown } from \"react-icons/fa\";\r\nimport OutsideClickHandler from \"react-outside-click-handler\";\r\n\r\nconst DropDownFilter = ({ title, value, options, handleChange, property }) => {\r\n  const [open, setOpen] = useState(() => false);\r\n\r\n  const handleOptionClick = (option) => {\r\n    setOpen(false);\r\n    handleChange({ key: property, value: option });\r\n  };\r\n\r\n  return (\r\n    <OutsideClickHandler\r\n      onOutsideClick={() => {\r\n        setOpen(false);\r\n      }}\r\n    >\r\n      <div className=\"drop-down-filter\">\r\n        <div className=\"red-outline\">\r\n          <div className=\"select-wrapper\" onClick={() => setOpen(!open)}>\r\n            <div className=\"drop-down\">\r\n              {value ? options[value] : title}\r\n              <FaAngleDown />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {open && (\r\n          <div className=\"drop-down-options\">\r\n            {Object.keys(options).map((optionKey, i) => {\r\n              const classes =\r\n                i === 0 && !value\r\n                  ? \"option selected\"\r\n                  : +optionKey === value\r\n                  ? \"option selected\"\r\n                  : \"option\";\r\n              return (\r\n                <p\r\n                  className={classes}\r\n                  onClick={() => handleOptionClick(i > 0 ? +optionKey : \"\")}\r\n                  key={optionKey}\r\n                >\r\n                  {options[optionKey] + \" \"}\r\n                </p>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </OutsideClickHandler>\r\n  );\r\n};\r\n\r\nexport default DropDownFilter;\r\n","import { useState } from \"react\";\r\nimport ManaRadioGroup from \"./ManaRadioGroup\";\r\nimport DropDownFilter from \"./DropDownFilter\";\r\nimport {\r\n  HearthstoneRarity,\r\n  HearthstoneType,\r\n  HearthstoneStandartCardSet,\r\n  HearthstoneMinionType,\r\n  HearthstoneSpellSchool,\r\n  HearthstoneClass,\r\n} from \"../Data/HearstoneData\";\r\nimport { IoOptions } from \"react-icons/io5\";\r\n\r\nconst CardFilterPanel = ({\r\n  changeFilter,\r\n  toggleClassCards,\r\n  filter,\r\n  selectClass,\r\n  playerClassId,\r\n}) => {\r\n  const [showExpanded, setShowExpanded] = useState(false);\r\n\r\n  return (\r\n    <div className=\"card-filter-panel\">\r\n      <div className=\"filter-panel-content\">\r\n        <div className=\"red-outline\">\r\n          <div\r\n            className=\"select-wrapper panel-btn select-wrapper-class\"\r\n            onClick={() => selectClass(true)}\r\n          >\r\n            <div className=\"class-icon\"></div>\r\n            Class Selection\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"toggle-group\">\r\n            <div className=\"class-toggle-btn\">\r\n              <div\r\n                className={`toggle-btn-circle ${HearthstoneClass[playerClassId]}-round`}\r\n                onClick={() => toggleClassCards()}\r\n              ></div>\r\n              {filter.classId === playerClassId ? (\r\n                <div className=\"toggle-btn-border\"></div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"class-toggle-btn go-left\">\r\n              <div\r\n                className=\"toggle-btn-circle\"\r\n                onClick={() => toggleClassCards()}\r\n              ></div>\r\n              {filter.classId === 12 ? (\r\n                <div className=\"toggle-btn-border\"></div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <ManaRadioGroup\r\n            handleChange={changeFilter}\r\n            manaCount={10}\r\n            selected={filter[\"manaCost\"]}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"red-outline\">\r\n          <div\r\n            className={\r\n              showExpanded\r\n                ? \"select-wrapper panel-btn filters exp\"\r\n                : \"select-wrapper panel-btn filters\"\r\n            }\r\n            onClick={() => setShowExpanded((show) => !show)}\r\n          >\r\n            <IoOptions />\r\n            Filters\r\n          </div>\r\n        </div>\r\n        {filter.manaCost !== undefined &&\r\n        Object.keys(filter).length - 2 !== 0 ? (\r\n          <div className=\"filters-count\">{Object.keys(filter).length - 2}</div>\r\n        ) : Object.keys(filter).length - 1 !== 0 &&\r\n          filter.manaCost === undefined ? (\r\n          <div className=\"filters-count\">{Object.keys(filter).length - 1}</div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n\r\n      {showExpanded && (\r\n        <div className=\"open-panel\">\r\n          <div className=\"filter-panel-content jc-center\">\r\n            <DropDownFilter\r\n              options={HearthstoneRarity}\r\n              handleChange={changeFilter}\r\n              property=\"rarityId\"\r\n              value={filter[\"rarityId\"]}\r\n              title=\"Rarity\"\r\n            />\r\n\r\n            <DropDownFilter\r\n              options={HearthstoneType}\r\n              handleChange={changeFilter}\r\n              property=\"cardTypeId\"\r\n              value={filter[\"cardTypeId\"]}\r\n              title=\"Type\"\r\n            />\r\n\r\n            <DropDownFilter\r\n              options={HearthstoneStandartCardSet}\r\n              handleChange={changeFilter}\r\n              property=\"cardSetId\"\r\n              value={filter[\"cardSetId\"]}\r\n              title=\"Card Set\"\r\n            />\r\n\r\n            <DropDownFilter\r\n              options={HearthstoneMinionType}\r\n              handleChange={changeFilter}\r\n              property=\"minionTypeId\"\r\n              value={filter[\"minionTypeId\"]}\r\n              title=\"Minion Type\"\r\n            />\r\n\r\n            <DropDownFilter\r\n              options={HearthstoneSpellSchool}\r\n              handleChange={changeFilter}\r\n              property=\"spellSchoolId\"\r\n              value={filter[\"spellSchoolId\"]}\r\n              title=\"Spell School\"\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardFilterPanel;\r\n","const CardRow = ({ card, removeCard, quantity }) => {\r\n  const countNumber = card.rarityId === 5 ? \"⋆\" : quantity === 2 ? \"2\" : \"\";\r\n\r\n  return (\r\n      <div className=\"card-row\" onClick={() => removeCard(card)}>\r\n        <span className=\"card-row-cost\">{card.manaCost}</span>\r\n        <span className=\"card-row-name\">{card.name}</span>\r\n        <div className=\"card-row-fill\"></div>\r\n        <div className=\"card-row-fade\"></div>\r\n        <div\r\n          className=\"card-row-image\"\r\n          style={{ backgroundImage: `url(\"${card.cropImage}\")` }}\r\n        ></div>\r\n        <span className=\"card-row-count\">{countNumber}</span>\r\n      </div>\r\n\r\n  );\r\n};\r\n\r\nexport default CardRow;\r\n","import { useEffect } from \"react\";\r\n\r\nconst CardDeckModal = ({ hideModal }) => {\r\n  useEffect(() => {\r\n    setTimeout(() => hideModal(false), 3000);\r\n  }, [hideModal]);\r\n\r\n  return (\r\n    <div className=\"card-deck-modal\">\r\n      Deck code was coppied to your clipboard\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardDeckModal;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { CardDeckContext } from \"./CardDeckProvider\";\r\nimport { DeckInfoContext } from \"./CardDeckProvider\";\r\nimport CardRow from \"./CardRow\";\r\nimport { HearthstoneDispayClass } from \"../Data/HearstoneData\";\r\nimport CardDeckModal from \"./CardDeckModal\";\r\nimport { FaTrashAlt } from \"react-icons/fa\";\r\n\r\nconst { BlizzAPI } = require(\"blizzapi\");\r\n\r\nconst api = new BlizzAPI({\r\n  region: \"eu\",\r\n  clientId: \"8eda43e5500c4b638ea8b61e29f79f9a\",\r\n  clientSecret: \"2nPEr2sOvvMZs7tB9zrSJ1Y61gnkf0YK\",\r\n});\r\n\r\nconst CardDeck = ({ playerClassId }) => {\r\n  const [showModal, setshowModal] = useState(false);\r\n  const { deck, removeCard, clearDeck } = useContext(CardDeckContext);\r\n  const deckInfo = useContext(DeckInfoContext);\r\n\r\n  const copyDeckCode = async () => {\r\n    if (deckInfo.count !== 30 || showModal) {\r\n      return;\r\n    }\r\n\r\n    let deckIds = \"\";\r\n    deck.forEach((card) => {\r\n      deckIds += `${card.id},`;\r\n      if (deckInfo[card.id] === 2) deckIds += `${card.id},`;\r\n    });\r\n\r\n    const { deckCode } = await api.query(\r\n      `/hearthstone/deck?locale=en_US&ids=${deckIds}`\r\n    );\r\n    await navigator.clipboard.writeText(deckCode);\r\n    await setshowModal(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card-deck\">\r\n      <div className=\"deck-head\">\r\n        <div className=\"deck-head-border\">\r\n          <div className=\"clear-deck\" onClick={() => clearDeck()}>\r\n            <FaTrashAlt />\r\n          </div>\r\n          <p className=\"white-hs-text\">\r\n            {HearthstoneDispayClass[+playerClassId]} Deck\r\n          </p>\r\n          <span className=\"gold-hs-text\"> {deckInfo.count} / 30</span>\r\n        </div>\r\n        <div\r\n          className={\r\n            \"deck-head-content \" +\r\n            HearthstoneDispayClass[+playerClassId].replace(/ /g, \"\")\r\n          }\r\n        ></div>\r\n      </div>\r\n\r\n      <div className=\"deck-card-list\">\r\n        {deckInfo.count > 0 ? (\r\n          <div className=\"actual-card-list\">\r\n            {deck.map((card) => (\r\n              <CardRow\r\n                card={card}\r\n                key={card.id}\r\n                removeCard={removeCard}\r\n                quantity={deckInfo[card.id]}\r\n              />\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <div className=\"empty-deck\">\r\n            <div className=\"empty-deck-mark\"></div>\r\n            <h6>Click cards to add them</h6>\r\n          </div>\r\n        )}\r\n        {showModal && <CardDeckModal hideModal={setshowModal} />}\r\n      </div>\r\n\r\n      <div className=\"deck-footer\">\r\n        <button className=\"footer-btn\" onClick={() => copyDeckCode()}>\r\n          {deckInfo.count === 30\r\n            ? \"Copy Deck Code\"\r\n            : \"Complete Full Deck To Copy It\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(CardDeck);\r\n","import { useState } from \"react\";\r\nimport CardsCollection from \"./CardsCollection\";\r\nimport CardFilterPanel from \"./CardFilterPanel\";\r\nimport CardDeck from \"./CardDeck\";\r\n\r\nconst DeckBuilder = ({ cards, selectClass, playerClassId }) => {\r\n  const [filter, setFilter] = useState({ classId: playerClassId });\r\n\r\n  const filterCards = (cards) => {\r\n    if (!cards) return;\r\n    return cards.filter((card) => {\r\n      let good = true;\r\n      Object.keys(filter).forEach((key) => {\r\n        if (card[key] !== filter[key]) good = false;\r\n        if (\r\n          !good &&\r\n          key === \"classId\" &&\r\n          card.multiClassIds.includes(+filter[key])\r\n        )\r\n          good = true;\r\n        if (key === \"cost\" && filter[key] === 10 && card[key] > 10) good = true;\r\n      });\r\n      return good;\r\n    });\r\n  };\r\n\r\n  const changeFilter = (changes) => {\r\n    if (filter[changes.key] === changes.value || changes.value === \"\") {\r\n      const newFilter = { ...filter };\r\n      delete newFilter[changes.key];\r\n      setFilter(newFilter);\r\n    } else {\r\n      const newFilter = { ...filter };\r\n      newFilter[changes.key] = changes.value;\r\n      setFilter(newFilter);\r\n    }\r\n  };\r\n\r\n  const clearFilter = () => {\r\n    setFilter({ classId: filter[\"classId\"] });\r\n  };\r\n\r\n  const toggleClassCards = () => {\r\n    filter.classId === 12\r\n      ? changeFilter({ key: \"classId\", value: playerClassId })\r\n      : changeFilter({ key: \"classId\", value: 12 });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CardFilterPanel\r\n        changeFilter={changeFilter}\r\n        filter={filter}\r\n        selectClass={selectClass}\r\n        toggleClassCards={toggleClassCards}\r\n        playerClassId={playerClassId}\r\n      />\r\n      <div className=\"deck-builder\">\r\n        {cards.length > 0 ? (\r\n          <CardsCollection\r\n            filter={filter}\r\n            changeFilter={changeFilter}\r\n            clearFilter={clearFilter}\r\n            cards={filterCards(cards)}\r\n          />\r\n        ) : (\r\n          <div className=\"placeholder\">Loading Cards...</div>\r\n        )}\r\n        <div className=\"card-deck-holder\">\r\n          <CardDeck playerClassId={playerClassId} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeckBuilder;\r\n","const Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"footer-container\">\r\n        <div className=\"footer-row\">\r\n          <p>Created with React:</p>\r\n          <p>Hearthstone API used for this project:</p>\r\n          <p>Official Hearthstone web-site</p>\r\n          <p>\r\n            <a href=\"http://www.onlinewebfonts.com\">oNline Web Fonts</a>\r\n          </p>\r\n        </div>\r\n        <div className=\"footer-row\">\r\n          <p>solomkaruslan3@gmail.com</p>\r\n          <a href=\"https://develop.battle.net/documentation/hearthstone\">\r\n            https://develop.battle.net/documentation/hearthstone\r\n          </a>\r\n          <a href=\"https://playhearthstone.com/en-us/deckbuilder\">\r\n            https://playhearthstone.com/en-us/deckbuilder\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { useState, useEffect, useCallback } from \"react\";\nimport { useTransition, animated } from \"react-spring\";\nimport { HearthstoneClass } from \"../Data/HearstoneData\";\nimport ClassSelector from \"./ClassSelector\";\nimport DeckBuilder from \"./DeckBuilder\";\nimport Footer from \"./Footer\";\nimport CardDeckProvider from \"./CardDeckProvider\";\nconst { BlizzAPI } = require(\"blizzapi\");\n\nconst api = new BlizzAPI({\n  region: \"eu\",\n  clientId: \"8eda43e5500c4b638ea8b61e29f79f9a\",\n  clientSecret: \"2nPEr2sOvvMZs7tB9zrSJ1Y61gnkf0YK\",\n});\n\nfunction App() {\n  const [playerClassId, setPlayerClassId] = useState(null);\n  const [classSelection, setClassSelection] = useState(true);\n  const [cards, setCards] = useState([]);\n  const AnimatedClassSelector = animated(ClassSelector);\n\n  const transition = useTransition(classSelection, {\n    from: { opacity: 0 },\n    enter: { opacity: 1 },\n    leave: { opacity: 0 },\n    config: {\n      duration: 1000,\n    },\n  });\n\n  const selectClass = (id) => {\n    setPlayerClassId(id);\n    setClassSelection((state) => !state);\n    setCards([]);\n  };\n\n  const getCards = useCallback(async () => {\n    const { cards } = await api.query(\n      `/hearthstone/cards?locale=en_US&set=standard&class=${HearthstoneClass[playerClassId]},neutral&collectible=1&gameMode=constructed&page=1&pageSize=400&sort=manaCost:asc`\n    );\n    setCards(cards);\n  }, [playerClassId, setCards]);\n\n  useEffect(() => {\n    if (playerClassId) getCards();\n  }, [playerClassId, getCards]);\n\n  return (\n    <div>\n      {transition((styles, classSelection) =>\n        classSelection ? (\n          <div className=\"class-selection-page\">\n            <AnimatedClassSelector styles={styles} selectClass={selectClass} />\n          </div>\n        ) : (\n          <div className=\"deck-builder-page\">\n            <div className=\"App\">\n              <CardDeckProvider>\n                <DeckBuilder\n                  cards={cards}\n                  selectClass={setClassSelection}\n                  playerClassId={playerClassId}\n                />\n              </CardDeckProvider>\n            </div>\n            <Footer />\n          </div>\n        )\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\n\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n\n\n    <App />\n\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}